[project]
name = "neuroninstanceseg"
version = "1.0.1"
requires-python = ">=3.8"
# dependencies = [ 
#     "imgaug==0.4.0",
#     "keras==2.4.3", # Recommended: 2.3.1
#     "numpy==1.19.5",
#     "py-opencv", # Recommended: opencv_contrib_python 4.6.0.66
#     "pandas==1.1.5", # Recommended: 1.1.5
#     "scikit-image==0.17.2",
#     "scipy==1.9.1", # Recommended: 1.1.0
#     "tensorflow==2.4.0",
#     "tqdm==4.56.0"
# ]

[project.scripts]
train_efficient_b5="neuroninstanceseg.train_efficient_b5:main"
predict_efficient_b5="neuroninstanceseg.predict_efficient_b5:main"
postprocessing="neuroninstanceseg.postprocessing:main"

[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/neuroninstanceseg"]
sources = ["src"]
exclude = [ "/.gitignore",
            "/*.toml" ]

[tool.hatch.build.targets.sdist]
packages = ["src/neuroninstanceseg"]

[tool.pixi.workspace]
channels = ["nvidia/label/cuda-11.8.0", "conda-forge", "bioconda", "pytorch"]
platforms = ["linux-64"]

[tool.pixi.activation]
env = { XLA_FLAGS="--xla_gpu_cuda_data_dir=$PIXI_PROJECT_ROOT/.pixi/envs/$PIXI_ENVIRONMENT_NAME", TF_XLA_FLAGS="--tf_xla_enable_xla_devices", SSL_CERT_FILE="$PIXI_PROJECT_ROOT/.pixi/envs/$PIXI_ENVIRONMENT_NAME/ssl/cacert.pem" }

[tool.pixi.system-requirements]
cuda = "11.8"

[tool.pixi.dependencies]
setuptools = "*"
pip = "*"
hatchling = "*"
gcc = "*"
imgaug = "0.4.0"
keras = "2.4.3" # Recommended: 2.3.1
numpy = "1.19.5"
py-opencv = "*" # Recommended: opencv_contrib_python 4.6.0.66
pandas = "1.1.5" # Recommended: 1.1.5
scikit-image = "0.17.2"
scipy = "1.9.1" # Recommended: 1.1.0
tensorflow = "2.4.0"
tqdm = "4.56.0"
